---
import '../styles/testimonios.css'
---

<section class="testimonios">
    <h2>Testimonios de nuestras <br>clientas <span style="color:#a67c52;">satisfechas</span></h2>

    <div class="slider-container">
      <div class="slider" id="slider">
        <!-- Testimonio 1 -->
        <div class="testimonial">
          <div class="quote">“</div>
          <div class="text">El proceso fue súper cómodo y el resultado es simplemente perfecto. Me siento mucho más segura y lista para cualquier ocasión. ¡Son las mejores!</div>
          <div class="profile">
             <!--<img src="https://i.pravatar.cc/100?img=1" alt="Sarah">-->
            <div class="profile-info">
              <div class="name">- Sofía G.</div>
              <div class="title"></div>
            </div>
          </div>
        </div>
  
        <!-- Testimonio 2 -->
        <div class="testimonial">
          <div class="quote">“</div>
          <div class="text">La atención es de primera, siempre te hacen sentir bienvenida y escuchada. Además, la calidad de las extensiones es superior; me duran muchísimo y siempre lucen fabulosas.</div>
          <div class="profile">
              <!--<img src="https://i.pravatar.cc/100?img=1" alt="Sarah">-->
            <div class="profile-info">
              <div class="name">— Valeria M.</div>
              <div class="title"></div>
            </div>
          </div>
        </div>
  
        <!-- Testimonio 3 -->
        <div class="testimonial">
          <div class="quote">“</div>
          <div class="text">El ambiente es relajante y el profesionalismo es evidente. Salgo de cada cita sintiéndome renovada y con unas pestañas espectaculares</div>
          <div class="profile">
             <!--<img src="https://i.pravatar.cc/100?img=1" alt="Sarah">-->
            <div class="profile-info">
              <div class="name">— Andrea P.z</div>
              <div class="title"></div>
            </div>
          </div>
        </div>
  
        <!-- Testimonio 4 -->
        <div class="testimonial">
          <div class="quote">“</div>
          <div class="text">La calidad del trabajo es excepcional y se nota que utilizan productos de alta gama.</div>
          <div class="profile">
            <!--<img src="https://i.pravatar.cc/100?img=1" alt="Sarah">-->
            <div class="profile-info">
              <div class="name">— Laura C.</div>
              <div class="title"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  
    <div class="controls">
      <button onclick="moveSlide(-1)">‹ Anterior</button>
      <button onclick="moveSlide(1)">Siguiente ›</button>
    </div>
</section>

<script is:global>
  let currentIndex = 0;
  const slider = document.getElementById('slider');
  const slides = slider.children;
  let slidesToShow = window.innerWidth < 768 ? 1 : 2;
  const totalSlides = slides.length;
  let maxIndex = Math.ceil(totalSlides / slidesToShow) - 1;

  // Responsive update
  function updateSlidesToShow() {
    slidesToShow = window.innerWidth < 768 ? 1 : 2;
    maxIndex = Math.ceil(totalSlides / slidesToShow) - 1;
    currentIndex = 0;
    slider.style.transition = 'none';
    slider.style.transform = `translateX(0%)`;
  }
  window.addEventListener('resize', updateSlidesToShow);

  // Mover con botones
  function moveSlide(direction) {
    currentIndex += direction;
    if (currentIndex < 0) currentIndex = maxIndex;
    if (currentIndex > maxIndex) currentIndex = 0;

    const movePercent = (100 / totalSlides) * slidesToShow * currentIndex;
    slider.style.transition = 'transform 0.5s ease';
    slider.style.transform = `translateX(-${movePercent}%)`;
  }

  // Auto
  let autoSlide = setInterval(() => moveSlide(1), 5000);

  // DRAG
  let isDragging = false;
  let startX = 0;
  let currentTranslate = 0;
  let prevTranslate = 0;
  let animationID;
  let sliderRect = slider.getBoundingClientRect();

  function getPositionX(event) {
    return event.type.includes('mouse') ? event.pageX : event.touches[0].clientX;
  }

  function setSliderPosition() {
    slider.style.transform = `translateX(${currentTranslate}px)`;
  }

  function animation() {
    setSliderPosition();
    if (isDragging) requestAnimationFrame(animation);
  }

  function touchStart(event) {
    isDragging = true;
    startX = getPositionX(event);
    prevTranslate = getTranslateValue();
    slider.classList.add('dragging');
    cancelAutoSlide();
    animation();
  }

  function touchMove(event) {
    if (!isDragging) return;
    const currentX = getPositionX(event);
    const delta = currentX - startX;
    currentTranslate = prevTranslate + delta;
  }

  function touchEnd() {
    isDragging = false;
    slider.classList.remove('dragging');
    sliderRect = slider.getBoundingClientRect();

    const movedBy = currentTranslate - prevTranslate;
    const threshold = sliderRect.width / (slidesToShow * 4); // ~25% of one slide

    if (movedBy < -threshold) {
      moveSlide(1);
    } else if (movedBy > threshold) {
      moveSlide(-1);
    } else {
      slider.style.transition = 'transform 0.5s ease';
      slider.style.transform = `translateX(${prevTranslate}px)`;
    }

    restartAutoSlide();
  }

  function getTranslateValue() {
    const style = window.getComputedStyle(slider);
    const matrix = new WebKitCSSMatrix(style.transform);
    return matrix.m41;
  }

  function cancelAutoSlide() {
    clearInterval(autoSlide);
  }

  function restartAutoSlide() {
    clearInterval(autoSlide);
    autoSlide = setInterval(() => moveSlide(1), 5000);
  }

  // Listeners
  slider.addEventListener('mousedown', touchStart);
  slider.addEventListener('mousemove', touchMove);
  slider.addEventListener('mouseup', touchEnd);
  slider.addEventListener('mouseleave', () => { if (isDragging) touchEnd(); });
  slider.addEventListener('touchstart', touchStart);
  slider.addEventListener('touchmove', touchMove);
  slider.addEventListener('touchend', touchEnd);
</script>

